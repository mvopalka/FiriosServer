// <auto-generated />
using System;
using Firios.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiriosServer.Migrations
{
    [DbContext(typeof(FiriosSuperLightContext))]
    [Migration("20220415202047_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("Firios.Entity.IncidentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mpd")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IncidentEntity");
                });

            modelBuilder.Entity("Firios.Entity.UserBrowserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Auth")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expire")
                        .HasColumnType("TEXT");

                    b.Property<string>("P256dh")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserEntityId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("UserBrowserDatas");
                });

            modelBuilder.Entity("Firios.Entity.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PasswordIteration")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titules")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UserEntity");
                });

            modelBuilder.Entity("Firios.Entity.UserIncidentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IncidentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IncidentId");

                    b.HasIndex("UserId");

                    b.ToTable("UserIncidentEntity");
                });

            modelBuilder.Entity("Firios.Entity.UserBrowserData", b =>
                {
                    b.HasOne("Firios.Entity.UserEntity", "UserEntity")
                        .WithMany("BrowserData")
                        .HasForeignKey("UserEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Firios.Entity.UserIncidentEntity", b =>
                {
                    b.HasOne("Firios.Entity.IncidentEntity", "IncidentEntity")
                        .WithMany("Users")
                        .HasForeignKey("IncidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firios.Entity.UserEntity", "UserEntity")
                        .WithMany("Incidents")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncidentEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Firios.Entity.IncidentEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Firios.Entity.UserEntity", b =>
                {
                    b.Navigation("BrowserData");

                    b.Navigation("Incidents");
                });
#pragma warning restore 612, 618
        }
    }
}
